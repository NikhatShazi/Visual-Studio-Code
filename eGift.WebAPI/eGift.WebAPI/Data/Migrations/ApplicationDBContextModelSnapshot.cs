// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eGift.WebAPI.Models.DBContexts;

#nullable disable

namespace eGift.WebAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "10.0.0-preview.7.25380.108");

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.AddressModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityId");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Pincode")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pincode");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<string>("Street1")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Street1");

                    b.Property<string>("Street2")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Street2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Address", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.CategoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CategoryName");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Category", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.CityModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("CityCode")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CityCode");

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CityName");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateId");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("City", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.CountryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CountryCode");

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CountryName");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Country", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.CustomerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FirstName");

                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("LastName");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mobile");

                    b.Property<byte[]>("ProfileImageData")
                        .HasColumnType("BLOB")
                        .HasColumnName("ProfileImageData");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ProfileImagePath");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.EmployeeModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("FirstName");

                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("LastName");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mobile");

                    b.Property<byte[]>("ProfileImageData")
                        .HasColumnType("BLOB")
                        .HasColumnName("ProfileImageData");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ProfileImagePath");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Employee", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.GenderModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("GenderName")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GenderName");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Gender", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.LoginModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastLoginDate");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LoginDate");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Password");

                    b.Property<int>("RefId")
                        .HasColumnType("int")
                        .HasColumnName("RefId");

                    b.Property<string>("RefType")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RefType");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UserName");

                    b.HasKey("ID");

                    b.ToTable("Login", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.OrderDetailsModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Discount");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NetAmount");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderId");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Tax");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("OrderDetails", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.OrderModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CancelDate");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("DeliveryDate");

                    b.Property<DateTime?>("DispatchDate")
                        .HasColumnType("datetime")
                        .HasColumnName("DispatchDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Notes");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("OrderNumber");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ShippedDate");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalAmount");

                    b.Property<decimal?>("TotalDiscount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalDiscount");

                    b.Property<decimal?>("TotalTax")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalTax");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Order", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.ProductModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Discount");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("LongDescription")
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("LongDescription");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("PictureData1")
                        .HasColumnType("BLOB")
                        .HasColumnName("PictureData1");

                    b.Property<byte[]>("PictureData2")
                        .HasColumnType("BLOB")
                        .HasColumnName("PictureData2");

                    b.Property<byte[]>("PictureData3")
                        .HasColumnType("BLOB")
                        .HasColumnName("PictureData3");

                    b.Property<byte[]>("PictureData4")
                        .HasColumnType("BLOB")
                        .HasColumnName("PictureData4");

                    b.Property<string>("PicturePath1")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PicturePath1");

                    b.Property<string>("PicturePath2")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PicturePath2");

                    b.Property<string>("PicturePath3")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PicturePath3");

                    b.Property<string>("PicturePath4")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PicturePath4");

                    b.Property<int?>("ProductAvailable")
                        .HasColumnType("int")
                        .HasColumnName("ProductAvailable");

                    b.Property<byte[]>("ProductImageData")
                        .HasColumnType("BLOB")
                        .HasColumnName("ProductImageData");

                    b.Property<string>("ProductImagePath")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ProductImagePath");

                    b.Property<int?>("QuantityPerUnit")
                        .HasColumnType("int")
                        .HasColumnName("QuantityPerUnit");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ShortDescription");

                    b.Property<int?>("SizeID")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("SubCategoryId");

                    b.Property<int?>("UnitInOrder")
                        .HasColumnType("int")
                        .HasColumnName("UnitInOrder");

                    b.Property<int?>("UnitInStore")
                        .HasColumnType("int")
                        .HasColumnName("UnitInStore");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UnitPrice");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Product", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.RoleModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("RoleName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("RoleName");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("Role", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.StateModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("CountryId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("StateCode")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("StateCode");

                    b.Property<string>("StateName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("StateName");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("State", "dbo");
                });

            modelBuilder.Entity("eGift.WebAPI.Models.DataModels.SubCategoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SubCategoryName");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ID");

                    b.ToTable("SubCategory", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
